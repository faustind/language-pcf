{- Pairs as Church Pairs.
   See https://en.wikipedia.org/wiki/Church_encoding#Church_pairs
-}

let Pair = \x y z. z x y;
let fst  = \p. p (\x y. x);
let snd  = \p. p (\x y. y);


{- List: An implentation using a Church pair. 
   See https://en.wikipedia.org/wiki/Church_encoding#List_encodings
-}

-- An empty list is a pair such that its first element is `true`
let nil = Pair true true;
let null = fst;

-- creates a list node which is not null and give it a head h and a tail t
let cons = \h t. Pair false (Pair h t);

let head = \z. fst (snd z);
let tail = \z. snd (snd z);
